<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ************************************************************************** -->
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- ************************************************************************** -->

	<!-- enable autowired/inject -->
	<context:annotation-config />

	<!-- Security datasource is the same of business application -->
	<!--  
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/SEMDataSource" />
	</bean>
	-->
	<bean id="dataSourceOracle" class="org.springframework.jndi.JndiObjectFactoryBean">
		  <property name="jndiName" value="java:comp/env/jdbc/CASOracleDataSource" /> 
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceOracle" />
	</bean>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactoryBusiness" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceOracle" />
		<property name="typeAliasesPackage" value="it.seda.security.domain" />
		<!-- <property name="typeAliasesPackage" value="it.seda.spring.mvc.domain" /> -->
	</bean>

	<!-- scan for mybatis mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBusiness" />
		<property name="basePackage" value="it.seda.security.persistence" />
		<!-- <property name="basePackage" value="it.seda.spring.mvc.persistence" />
		
		<property name="basePackage" value="it.seda.security.persistence" />
		 -->
		
		<!-- 
		<property name="annotationClass" value="it.seda.security.annotations.SecurityRepository" />
		 -->
	</bean>

	<!-- Enable the Spring theme support -->
	<bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="it.seda.example.project.theme.theme-"/>
	</bean>

	<bean id="themeResolver" class="it.seda.template.spring.theme.URLBasedThemeResolver">
		<property name="defaultThemeName" value="default"/> 
		<property name="definitions">
			<map>
				<entry key="http://localhost" value="default"/>
				<entry key="http://127.0.0.1" value="custom"/>
			</map>
		</property>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"> 
		<property name="defaultLocale" value="it"/>
		<property name="cookieName" value="language"/>
	</bean>	
	
	<!-- Enable the Spring high level exception handler -->
	<bean id="simpleMappingExceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <map>
                <entry key="NoSuchRequestHandlingMethodException" value="error404"/>
                <entry key="java.lang.Throwable" value="error"/>         
            </map>
        </property>
        <!-- See note below on how this interacts with Spring Boot -->
        <property name="defaultErrorView" value="error"/>
        <property name="exceptionAttribute" value="ex"/>

        <!-- Name of logger to use to log exceptions. Unset by default, so logging disabled -->
        <property name="warnLogCategory" value="it.seda.spring.mvc.exception.logger"/>
    </bean>

	<!-- *********************** SPRING i18n BUNDLES ***************************** -->
	<!-- uimessage.properties personalizzato -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>it/seda/example/project/i18n/ui/uimessages</value>
				<value>it/seda/example/project/i18n/validator/messages</value>
				<value>it/seda/example/project/i18n/menu/menu</value>
				<value>org/springframework/security/messages</value>
				<!-- security localization work close to org.springframework.web.filter.RequestContextFilter 
					or org.springframework.web.context.request.RequestContextListener -->
				<!-- <value>it/seda/sem/i18n/security/messages</value> -->
			</list>
		</property>
		<property name="fallbackToSystemLocale" value="false"/>
	</bean>
	
	<!-- Custom validation messages -->
	<bean name="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource">
			<ref bean="messageSource" />
		</property>
	</bean>



</beans>
