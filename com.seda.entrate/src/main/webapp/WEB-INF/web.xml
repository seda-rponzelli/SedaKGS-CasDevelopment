<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>com.seda.entrate</display-name>
  <welcome-file-list>
    <welcome-file>entry.jsp</welcome-file>
  </welcome-file-list>
  <welcome-file-list>
    <welcome-file>entry.jsp</welcome-file>
  </welcome-file-list>
  
	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/root-context.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
 
 	<listener>
  		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- CAS sesssion ID Filter -->
    <filter>
		<filter-name>CasSessionFilter</filter-name>
		<filter-class>it.seda.security.filter.CasSessionFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CasSessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher>		
	</filter-mapping>
	<!-- Ticket filter -->
	<filter>
		<filter-name>ticketRequestFilter</filter-name>
		<filter-class>it.seda.security.filter.TicketRequestFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>ticketRequestFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher>		
	</filter-mapping>
 
 	<!-- i18n --> 
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>it.seda.security.filter.SecurityRequestContextFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher>		
	</filter-mapping>

	<!-- Spring Security filter  -->
	
	    
	<filter>
       <filter-name>CAS Single Sign Out Filter</filter-name>
       <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>

    <filter-mapping>
       <filter-name>CAS Single Sign Out Filter</filter-name>
       <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher> 
	</filter-mapping>

	
	<!--  Hidden Method Filter -->
	<!-- cosi possiamo gestire su qualsiasi richiesta i metodi statndard rest specificando il parametro method o
	dal form spring  -->
	<filter>
	 <filter-name>hiddenHttpMethodFilter</filter-name>
	 <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>webappServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>managerServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>eventsServlet</servlet-name>
	</filter-mapping>	 
	<!-- Processes MANAGER application requests -->
	<servlet>
		<servlet-name>webappServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/managerServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- Così gestisco solo una webappservelt volendo ne posso mettere più di una e quindi più webapp-context -->
	<!--  
	<servlet-mapping>
		<servlet-name>webappServlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>  
	-->
	
	<servlet-mapping>
		<servlet-name>webappServlet</servlet-name>
		<url-pattern>/manager/*</url-pattern>
	</servlet-mapping>
	
	<!-- --> 
	<error-page>
		<error-code>404</error-code>
		<location>/template/errors/http404</location>
	</error-page> 
	
	<error-page>
		<error-code>500</error-code>
		<location>/template/errors/http500</location>
	</error-page>	
	
</web-app>