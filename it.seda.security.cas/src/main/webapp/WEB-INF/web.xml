<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>it.seda.security.cas</display-name>
	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		    /WEB-INF/spring/root-context.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- application id filter --> 
	<filter>
		<filter-name>requestApplicatiopnIdtFilter</filter-name>
		<filter-class>it.seda.security.cas.filters.ApplicationIdFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>requestApplicatiopnIdtFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher>		
	</filter-mapping>
	
	<!-- i18n --> 
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>it.seda.security.filter.SecurityRequestContextFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher>		
	</filter-mapping>

	<!-- Spring Security filter -->

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>		
		<dispatcher>ERROR</dispatcher> 
	</filter-mapping>

	<!--  Hidden Method Filter -->
	<!-- cosi possiamo gestire su qualsiasi richiesta i metodi statndard rest specificando il parametro method o
	dal form spring  -->
	<filter>
	 <filter-name>hiddenHttpMethodFilter</filter-name>
	 <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>securityServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>managerServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
	  <filter-name>hiddenHttpMethodFilter</filter-name>
	  <servlet-name>eventsServlet</servlet-name>
	</filter-mapping>

	<!-- Processes Security application requests -->
	<servlet>
		<servlet-name>casServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/cas-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>casServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- --> 
	<error-page>
		<error-code>404</error-code>
		<location>/views/errors/error404</location>
	</error-page> 
	
	<error-page>
		<error-code>500</error-code>
		<location>/views/errors/error500</location>
	</error-page>	

	<!-- entry system -->
	<welcome-file-list>
		<welcome-file>entrypoint.jsp</welcome-file>
	</welcome-file-list>
</web-app>