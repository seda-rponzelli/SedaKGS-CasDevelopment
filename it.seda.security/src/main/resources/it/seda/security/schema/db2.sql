/* **************************** */
/* Tabelle base e generalizzate */
/* **************************** */
create table users (
	username varchar(128) not null,
	firstname varchar(64) not null,
	lastname varchar(64) not null,
	email varchar(128) not null,
	enabled smallint not null with default 1,
 
	registration date not null with default current date,
	expiration date not null,
	credentialsExpiration date not null with default '1900-01-01',
	
	attempts smallint not null with default 0,
	lastAttempt timestamp,	
	constraint pk_users primary key(username)
);
--alter table users add lastAttempt timestamp;
--alter table users drop column lastAttempts;
--call sysproc.admin_cmd('REORG TABLE USERS')
create table signon (
	password varchar(256) not null,
	username varchar(128) not null,
	constraint pk_sigon primary key(username),
	constraint fk_sigon_users foreign key(username) references users(username) on delete cascade	
);
create table groups (
	id bigint generated by default as identity(start with 0),
	group_name varchar(128) not null,
	group_description varchar(256) not null,
	constraint pk_groups primary key(id)
);

create table group_authorities (
	group_id bigint not null,
	authority varchar(256) not null,
	constraint pk_group_authorities primary key(group_id, authority),
	constraint fk_group_authorities_group foreign key(group_id) references groups(id) on delete cascade
);

create table group_members (
	username varchar(128) not null,
	group_id bigint not null,
	constraint pk_group_members primary key(username, group_id),	
	constraint fk_group_members_group foreign key(group_id) references groups(id) on delete cascade,
    constraint fk_group_members_users foreign key(username) references users(username) on delete cascade	
);
/* ********************************** */
/* Tabelle di gestione cliente/utente */
/* ********************************** */
create table customers (
    id varchar(64) not null,
	customer_name varchar(128) not null,
	customer_code varchar(64) not null,
	constraint pk_customers primary key(id)
);

create table customer_users (
    customer_id varchar(64) not null,
	username varchar(128) not null,
	constraint pk_customer_users primary key(customer_id, username),
	constraint fk_customer_users_customer foreign key(customer_id) references customers(id) on delete cascade,
    constraint fk_customer_users_users foreign key(username) references users(username) on delete cascade
);
/* **************************************** */
/* Tabelle di gestione applicazione/cliente */
/* **************************************** */
--drop table applications;
--drop table customer_applications;
--drop table tickets;
create table applications (
    id varchar(128) not null,
	application_name varchar(128) not null,
	constraint pk_applications primary key(id)
);

create table customer_applications (
    customer_id varchar(64) not null,
    application_id varchar(128) not null,
    return_url varchar(256),
    constraint pk_customer_applications primary key(customer_id, application_id),
    constraint fk_customer_applications_customer foreign key(customer_id) references customers(id) on delete cascade,    
    constraint fk_customer_applications_application foreign key(application_id) references applications(id) on delete cascade
);
/* **************************************** */
/* Tabelle di gestione ticket/applicazione  */
/* **************************************** */
create table tickets (
	id varchar(128) not null,
	username varchar(128) not null,
	application_id varchar(128) not null,
	creation_date timestamp not null with default,
	expiration_date timestamp not null,
	constraint pk_tickets primary key(id),
	constraint fk_tickets_application foreign key(application_id) references applications(id) on delete cascade
);
